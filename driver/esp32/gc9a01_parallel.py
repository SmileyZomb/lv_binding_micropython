import espidf as _espidf  # NOQA
import time
import ili9488_parallel as _ili9488_parallel
from ili9488_parallel import (
    ILI9488_COLOR_MODE_16BIT,
    PORTRAIT as _PORTRAIT,
    LANDSCAPE as _LANDSCAPE,
    REVERSE_PORTRAIT as _REVERSE_PORTRAIT,
    REVERSE_LANDSCAPE as _REVERSE_LANDSCAPE,
)

PORTRAIT = _PORTRAIT
LANDSCAPE = _LANDSCAPE
REVERSE_PORTRAIT = _REVERSE_PORTRAIT
REVERSE_LANDSCAPE = _REVERSE_LANDSCAPE


class GC9A01Parallel(_ili9488_parallel.ILI9488Parallel):

    def _init_cb(self, panel):
        _espidf.esp_lcd_panel_io_tx_param(self.io_handle, _espidf.LCD_CMD.SLPOUT, None, 0)
        time.sleep_ms(100)

        init_commands = (
            (0xFE, None),
            (0xEF, None),
            (0xEB, bytearray([0x14])),
            (0x84, bytearray([0x60])),
            (0x85, bytearray([0xFF])),
            (0x86, bytearray([0xFF])),
            (0x87, bytearray([0xFF])),
            (0x8E, bytearray([0xFF])),
            (0x8f, bytearray([0xFF])),
            (0x88, bytearray([0x0A])),
            (0x89, bytearray([0x23])),
            (0x8A, bytearray([0x00])),
            (0x8B, bytearray([0x80])),
            (0x8C, bytearray([0x01])),
            (0x8D, bytearray([0x03])),
            (_espidf.LCD_CMD.MADCTL, bytearray([self._madctl])),
            (_espidf.LCD_CMD.COLMOD, bytearray([ILI9488_COLOR_MODE_16BIT])),
            (0x90, bytearray([0x08, 0x08, 0x08, 0x08])),
            (0xFF, bytearray([0x60, 0x01, 0x04])),
            (0xC3, bytearray([0x13])),
            (0xC4, bytearray([0x13])),
            (0xC9, bytearray([0x30])),
            (0xBE, bytearray([0x11])),
            (0xE1, bytearray([0x10, 0x0E])),
            (0xDF, bytearray([0x21, 0x0C, 0x02])),
            (0xF0, bytearray([0x45, 0x09, 0x08, 0x08, 0x26, 0x2A])),
            (0xF1, bytearray([0x43, 0x70, 0x72, 0x36, 0x37, 0x6F])),
            (0xF2, bytearray([0x45, 0x09, 0x08, 0x08, 0x26, 0x2A])),
            (0xF3, bytearray([0x43, 0x70, 0x72, 0x36, 0x37, 0x6F])),
            (0xED, bytearray([0x1B, 0x0B])),
            (0xAE, bytearray([0x77])),
            (0xCD, bytearray([0x63])),
            (0x70, bytearray([0x07, 0x07, 0x04, 0x0E, 0x0F, 0x09, 0x07, 0x08, 0x03])),
            (0xE8, bytearray([0x34])),
            (0x60, bytearray([0x38, 0x0b, 0x6D, 0x6D, 0x39, 0xf0, 0x6D, 0x6D])),
            (0x61, bytearray([0x38, 0xF4, 0x6D, 0x6D, 0x38, 0xF7, 0x6D, 0x6D])),
            (0x62, bytearray([0x38, 0x0D, 0x71, 0xED, 0x70, 0x70, 0x38, 0x0F, 0x71, 0xEF, 0x70, 0x70])),
            (0x63, bytearray([0x38, 0x11, 0x71, 0xF1, 0x70, 0x70, 0x38, 0x13, 0x71, 0xF3, 0x70, 0x70])),
            (0x64, bytearray([0x28, 0x29, 0xF1, 0x01, 0xF1, 0x00, 0x07])),
            (0x66, bytearray([0x3C, 0x00, 0xCD, 0x67, 0x45, 0x45, 0x10, 0x00, 0x00, 0x00])),
            (0x67, bytearray([0x00, 0x3C, 0x00, 0x00, 0x00, 0x01, 0x54, 0x10, 0x32, 0x98])),
            (0x74, bytearray([0x10, 0x45, 0x80, 0x00, 0x00, 0x4E, 0x00])),
            (0x98, bytearray([0x3e, 0x07])),
        )

        for cmd, data in init_commands:
            if data is None:
                _espidf.esp_lcd_panel_io_tx_param(self.io_handle, cmd, None, 0)
            else:
                _espidf.esp_lcd_panel_io_tx_param(self.io_handle, cmd, data, len(data) & 0x1F)

        _espidf.esp_lcd_panel_io_tx_param(self.io_handle, _espidf.LCD_CMD.DISPON, None, 0)

        return _espidf.ESP.OK
